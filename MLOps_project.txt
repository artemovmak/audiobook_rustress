     Проект по разработке системы анализа
    ударных слогов и временной сегментации
                  слов в речи


1     Постановка задачи
Разработка системы для автоматического определения ударных слогов в словах и
временной сегментации слов в аудио. Система на основе модели sdhubert для из-
влечения эмбеддингов слогов, классификатора для определения ударения и авто-
энкодера для восстановления временных меток слов. Итоговый результат — точное
соответствие аудио-временных меток текстовым данным.


2     Функциональные требования
2.1    Извлечение эмбеддингов (sdhubert)
    • Использовать модель sdhubert (ссылка: https://github.com/cheoljun95/sdhubert)
      для преобразования аудио-сигнала в последовательность эмбеддингов слогов.
    • Полученные эмбеддинги должны отражать фонетические и синтаксические
      особенности речи, включая ударения.

2.2    Классификация ударных слогов
    • Передать эмбеддинги слогов в классификатор (FC-сеть или энкодер) для опре-
      деления, является ли слог ударным.
    • Вывод: метки ударения для каждого слога в последовательности.

2.3    Тайминг слов и слогов
    • Определить временные границы каждого слова в аудио-файле.
    • Сопоставить временные метки слогов с их порядком в словах.

2.4    Интеграция с автоэнкодером
    • Использовать автоэнкодер для восстановления временных меток слов на основе
      эмбеддингов sdhubert.
    • Совместить результаты автоэнкодера с данными от sdhubert для точной син-
      хронизации слов и ударений.

                                       1
2.5    Сравнение с эталоном
    • Автоматическое сравнение полученных таймингов с эталонными примерами
      для оценки точности. (проставление ударений в тексте с помощью RuStress
      https://github.com/AIshutin/rustress?ysclid=m83idin1mp219648681)


3     Данные для обучения и проверки
Для обучения и проверки системы планируется использовать следующие типы дан-
ных:
    • Аудиокниги: Открытые коллекции аудиокниг, такие как проект LibriVox,
      предоставляют качественные записи с синхронизированным текстом, что поз-
      воляет получить аннотированные данные для обучения.
    • Образовательные материалы: Лекции, подкасты и другие образовательные
      записи, доступные в открытых источниках, также могут быть использованы
      для расширения датасета.
    • Мультимодальные наборы данных: Например, базы данных, такие как
      OpenSLR, которые содержат пары аудио-текстовых записей, будут применять-
      ся для тестирования и оценки модели.
    • Разметка ударений: Для обучения классификатора ударений потребуется
      дополнительная разметка, которая может быть получена вручную или с ис-
      пользованием существующих лингвистических инструментов.


4     Архитектура системы
4.1    Pipeline обработки
    1. Шаг 1: Аудио-файл → sdhubert → Эмбеддинги слогов.
    2. Шаг 2: Эмбеддинги → Классификатор → Метки ударения.
    3. Шаг 3: Эмбеддинги + Метки ударения → Определение временных границ
       слов.
    4. Шаг 4: Эмбеддинги → Автоэнкодер → Тайминги слов.
    5. Шаг 5: Синхронизация данных из шагов 3 и 4 → Итоговый тайминг с ударе-
       ниями.

4.2    Инструменты и технологии
    • sdhubert: Модель для извлечения эмбеддингов слогов (базируется на Hubert,
      адаптирована для точной фонетики).
    • Автоэнкодер: Модель для восстановления временных меток слов на основе
      компактного представления данных.
    • Классификатор: Полносвязная нейронная сеть (FC-сетка) или трансформер
      для определения ударения.

                                       2
5     План реализации
    1. Этап 1: Настройка и тестирование sdhubert на базовых данных.

    2. Этап 2: Разработка и обучение классификатора для ударений.

    3. Этап 3: Интеграция автоэнкодера для восстановления временных меток слов.

    4. Этап 4: Тестирование и оптимизация пайплайна.


6     Ожидаемые результаты
Система, которая:

    • Определяет ударные слоги с точностью 95%.

    • Сегментирует слова с отклонением в ±50 мс от эталона.

    • Синхронизирует аудио и текст в реальном времени.




                                       3
